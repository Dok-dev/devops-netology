# Наша команда разрабатывает несколько веб-сервисов, доступных по http.
# Мы точно знаем, что на их стенде нет никакой балансировки, кластеризации, за DNS прячется конкретный IP сервера, где установлен сервис.
# Проблема в том, что отдел, занимающийся нашей инфраструктурой очень часто меняет нам сервера, поэтому IP меняются примерно раз в неделю,
# при этом сервисы сохраняют за собой DNS имена. Это бы совсем никого не беспокоило, если бы несколько раз сервера не уезжали в такой
# сегмент сети нашей компании, который недоступен для разработчиков. Мы хотим написать скрипт, который опрашивает веб-сервисы, получает
# их IP, выводит информацию в стандартный вывод в виде: <URL сервиса> - <его IP>. Также, должна быть реализована возможность проверки
# текущего IP сервиса c его IP из предыдущей проверки. Если проверка будет провалена - оповестить об этом в стандартный вывод сообщением:
# [ERROR] <URL сервиса> IP mismatch: <старый IP> <Новый IP>.
# Будем считать, что наша разработка реализовала сервисы: drive.google.com, mail.google.com, google.com.

# читаем файл с хостами
# лукап по списку адресов
# сравнение с логом от предыдущей проверки
# Вывод сообщений о изменившемся IP
# запись лога

import socket

lookupList = []

# Получаем массив строк из файла
with open('hosts.txt', 'rt') as file:
    line = file.readline()
    # Разбираем строки, проверяем соотвествие IP и делаем номерованый словарь из хостов с ip
    while line:
        line = line.split(' ')
        if len(line) > 1:
        # делаем попытку лукапа доменного имени
            try:
                newIp = socket.gethostbyname(line[0])
            except socket.SO_ERROR:
                print('Lookup error!')

            # проверяем соотвествие IP, выводим ошибки и добавляем правильный вариант в список
            if newIp != line[1].strip():
                print(f'[ERROR] {line[0]} IP mismatch: {line[1].strip()} {newIp}')
            lookupList.append(line[0] + ' ' + newIp)
        line = file.readline()

# обновления файла с хостами
with open('hosts.txt', 'wt') as file:
    for line in lookupList:
        file.write(line + '\n')